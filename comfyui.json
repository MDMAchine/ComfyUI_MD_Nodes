{
  "name": "comfyui-md-nodes",
  "version": "1.4.1",
  "author": "MDMAchine",
  "description": "‚ñà‚ñà‚ñà‚ñà MD_Nodes by MDMAchine - The L337est Collection of ComfyUI Unleashed! ‚ñà‚ñà‚ñà‚ñà‚ñì‚ñí‚ñë\n\nForged in the digital fires, this node pack brings next-level tensor manipulation, advanced image alchemy, and precision audio sorcery to your ComfyUI workflows. Optimized for maximum creative chaos and minimal dependency friction. Expect surgical precision... or beautiful catastrophe, depending on your vibe. This is not your grandpappy's ComfyUI ‚Äì this is the future, delivered.",
  "repository": "https://github.com/MDMAchine/ComfyUI_MD_Nodes",
  "license": "Apache-2.0",
  "tags": [
    "utility",
    "tensor",
    "image processing",
    "audio",
    "video",
    "sampler",
    "scheduler",
    "latent",
    "MDMAchine",
    "advanced",
    "demonic_magic",
    "chaos"
  ],
  "dependencies": [
    "Jinja2",
    "MarkupSafe",
    "filelock",
    "fsspec",
    "imageio",
    "librosa",
    "math",
    "matplotlib",
    "mpmath",
    "networkx",
    "ollama",
    "pedalboard",
    "piexif",
    "pykakasi",
    "pyloudnorm",
    "requests",
    "scipy",
    "sentencepiece",
    "sympy",
    "tokenizers",
    "tqdm"
  ],
  "files": [
    ".gitignore",
    "APG_Guider_Forked.py",
    "AdvancedMediaSave.py",
    "Hybrid_Sigma_Scheduler.py",
    "NoiseDecayScheduler_Custom.py",
    "PingPongSampler_Custom.py",
    "PingPongSampler_Custom_FBG.py",
    "README.md",
    "SCENE_GENIUS_AUTOCREATOR.py",
    "UniversalGuardian.py",
    "__init__.py",
    "audio/AdvancedAudioPreviewAndSave.py",
    "audio/__init__.py",
    "audio/mastering_chain_node.py",
    "comfyui.json",
    "conditioning/ACE_T5_Conditioning_Node.py",
    "conditioning/ace_text_cleaners.py",
    "conditioning/spiece.model",
    "conditioning/spiece_tokenizer.py",
    "core/io.py",
    "latent/ACE_LATENT_VISUALIZER.py",
    "latent/__init__.py",
    "manuals/ACE_LATENT_VISUALIZER.md",
    "manuals/APG_Guider_Forked.md",
    "manuals/AdvancedAudioPreviewAndSave.md",
    "manuals/Advanced_Media_Save.md",
    "manuals/Hybrid_Sigma_Scheduler.md",
    "manuals/MD_Seed_Saver_Manual.md",
    "manuals/Master Technical Manual_ ACE Latent Visualizer.md",
    "manuals/Master Technical Manual_ APG Guider (Forked).md",
    "manuals/Master Technical Manual_ Advanced Audio Preview & Save (AAPS).md",
    "manuals/Master Technical Manual_ Advanced Media Save (AMS).md",
    "manuals/Master Technical Manual_ Advanced Noise Decay Scheduler.md",
    "manuals/Master Technical Manual_ Custom Audio Mastering Chain.md",
    "manuals/Master Technical Manual_ Hybrid Sigma Scheduler.md",
    "manuals/Master Technical Manual_ MD Seed Saver.md",
    "manuals/Master Technical Manual_ PingPong Sampler (Custom v0.9.9-p2 FBG).md",
    "manuals/Master Technical Manual_ PingPong Sampler (Lite+ V0.8.20).md",
    "manuals/Master Technical Manual_ Scene Genius Autocreator.md",
    "manuals/Master Technical Manual_ Universal Guardian.md",
    "manuals/NoiseDecayScheduler_Custom.md",
    "manuals/PingPong_Sampler_Custom.md",
    "manuals/PingPong_Sampler_Custom_FBG.md",
    "manuals/SCENE_GENIUS_AUTOCREATOR.md",
    "manuals/UniversalGuardian.md",
    "manuals/mastering_chain_node.md",
    "project_updater_config.json",
    "pyproject.toml",
    "requirements.txt",
    "seed_saver_node.py",
    "text/TextInputNode.py"
  ],
  "nodes": [
    {
      "type": "ACE_LatentVisualizer_v04",
      "title": "ACE Latent Visualizer v0.4 (Enhanced)",
      "description": "ACE_LatentVisualizer_v04: Enhanced latent data visualization with advanced features!\n\nNow with batch selection, multiple visualization modes, statistical analysis,\npeak detection, and much more!",
      "category": "MD_Nodes/Visualization",
      "file_path": "latent/ACE_LATENT_VISUALIZER.py"
    },
    {
      "type": "AceT5ConditioningAnalyzer",
      "title": "ACE T5 Analyzer üîç",
      "description": "Debugging tool to inspect conditioning tensors.\n\nConnect any conditioning output to see detailed information about:\n- Tensor shape and statistics\n- Lyrics token count\n- Conditioning metadata\n- Potential quality issues\n\nUseful for troubleshooting distortion or checking if lyrics are properly encoded.",
      "category": "MD_Nodes/Conditioning",
      "file_path": "conditioning/ACE_T5_Conditioning_Node.py"
    },
    {
      "type": "AceT5ConditioningScheduled",
      "title": "ACE T5 Conditioning ‚ö°",
      "description": "Production-ready ACE T5 conditioning with vocal control.\n\nThis node creates high-quality audio conditioning with separate control over:\n- Genre/style tags (base_tags)\n- Vocal characteristics (vocal_tags)\n- Lyrical content (lyrics)\n\nWorks with BOTH:\n‚Ä¢ Custom ACE T5 Model Loader (best quality, no LoRAs)\n‚Ä¢ Native DualCLIPLoader (LoRA support, slightly lower quality)\n\nRECOMMENDED: Use 'vocal_cond' output for best results!",
      "category": "MD_Nodes/Conditioning",
      "file_path": "conditioning/ACE_T5_Conditioning_Node.py"
    },
    {
      "type": "AceT5ModelLoader",
      "title": "ACE T5 Model Loader üéµ",
      "description": "Loads the ACE T5 model with proper tokenizer initialization.\n\nThis is a custom CLIP loader specifically for ACE Step audio generation models.\nIt provides the highest quality conditioning but does NOT support LoRAs.\n\nFor LoRA support, use the native DualCLIPLoader instead (slightly lower quality).",
      "category": "MD_Nodes/Loaders",
      "file_path": "conditioning/ACE_T5_Conditioning_Node.py"
    },
    {
      "type": "APGGuiderNode",
      "title": "APG Guider (Forked v0.3.0)",
      "description": "ComfyUI node for APG (Adaptive Projected Gradient) guidance.\n\nEnhanced fork with improved robustness, validation, and error handling.",
      "category": "MD_Nodes/Guiders",
      "file_path": "APG_Guider_Forked.py"
    },
    {
      "type": "AdvancedAudioPreviewAndSave",
      "title": "Advanced Audio Preview & Save",
      "description": "Professional audio processing and export node for ComfyUI.\nHandles normalization, effects, visualization, and intelligent metadata embedding.",
      "category": "MD_Nodes/Save",
      "file_path": "audio/AdvancedAudioPreviewAndSave.py"
    },
    {
      "type": "AdvancedMediaSave",
      "title": "Advanced Media Save üñºÔ∏è",
      "description": "",
      "category": "MD_Nodes/Save",
      "file_path": "AdvancedMediaSave.py"
    },
    {
      "type": "AdvancedTextNode",
      "title": "Advanced Text Input üìù",
      "description": "A versatile text input node with wildcard support, file loading, and text manipulation features.",
      "category": "MD_Nodes/Text",
      "file_path": "text/TextInputNode.py"
    },
    {
      "type": "HybridAdaptiveSigmas",
      "title": "Hybrid Sigma Scheduler",
      "description": "",
      "category": "MD_Nodes/Schedulers",
      "file_path": "Hybrid_Sigma_Scheduler.py"
    },
    {
      "type": "EnhancedSeedSaverNode",
      "title": "MD Enhanced Seed Saver",
      "description": "",
      "category": "MD_Nodes/Utility",
      "file_path": "seed_saver_node.py"
    },
    {
      "type": "MasteringChainNode",
      "title": "Mastering Chain v1.3 (Enhanced)",
      "description": "Advanced ComfyUI audio mastering chain with improved EQ and stereo-linked compression.",
      "category": "MD_Nodes/Audio Processing",
      "file_path": "audio/mastering_chain_node.py"
    },
    {
      "type": "NoiseDecayScheduler_Custom",
      "title": "Noise Decay Scheduler (Advanced)",
      "description": "",
      "category": "MD_Nodes/Schedulers",
      "file_path": "NoiseDecayScheduler_Custom.py"
    },
    {
      "type": "PingPongSamplerNode",
      "title": "PingPong Sampler (Lite+ v0.8.21)",
      "description": "ComfyUI node wrapper for the Lite+ v0.8.21 PingPongSampler.",
      "category": "MD_Nodes/Samplers",
      "file_path": "PingPongSampler_Custom.py"
    },
    {
      "type": "PingPongSamplerNodeFBG",
      "title": "PingPong Sampler v0.9.9-p4 (Stability + FBG)",
      "description": "Enhanced ComfyUI node wrapper with stability fixes.",
      "category": "MD_Nodes/Samplers",
      "file_path": "PingPongSampler_Custom_FBG.py"
    },
    {
      "type": "SceneGeniusAutocreator",
      "title": "Scene Genius Autocreator",
      "description": "A multi-stage ComfyUI node leveraging local LLMs for dynamic creative content generation.",
      "category": "Uncategorized",
      "file_path": "SCENE_GENIUS_AUTOCREATOR.py"
    },
    {
      "type": "TextFileLoader",
      "title": "Text File Loader üìÑ",
      "description": "Load text content from files for use in workflows",
      "category": "MD_Nodes/Text",
      "file_path": "text/TextInputNode.py"
    }
  ],
  "notes": "‚ñë‚ñí‚ñì Deploy this manifest to unleash the full power. Compatibility guaranteed with your spirit. ‚ñë‚ñí‚ñì"
}