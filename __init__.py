# This file is auto-generated by update_project.py

NODE_CLASS_MAPPINGS = {}
NODE_DISPLAY_NAME_MAPPINGS = {}

# Import and register all nodes
try:
    from .AdvancedMediaSave import NODE_CLASS_MAPPINGS as C_ADVANCEDMEDIASAVE, NODE_DISPLAY_NAME_MAPPINGS as D_ADVANCEDMEDIASAVE
    NODE_CLASS_MAPPINGS.update(C_ADVANCEDMEDIASAVE)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_ADVANCEDMEDIASAVE)
except ImportError as e:
    print(f'Could not import nodes from AdvancedMediaSave: {e}')

try:
    from .APG_Guider_Forked import NODE_CLASS_MAPPINGS as C_APG_GUIDER_FORKED, NODE_DISPLAY_NAME_MAPPINGS as D_APG_GUIDER_FORKED
    NODE_CLASS_MAPPINGS.update(C_APG_GUIDER_FORKED)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_APG_GUIDER_FORKED)
except ImportError as e:
    print(f'Could not import nodes from APG_Guider_Forked: {e}')

try:
    from .audio.AdvancedAudioPreviewAndSave import NODE_CLASS_MAPPINGS as C_AUDIO_ADVANCEDAUDIOPREVIEWANDSAVE, NODE_DISPLAY_NAME_MAPPINGS as D_AUDIO_ADVANCEDAUDIOPREVIEWANDSAVE
    NODE_CLASS_MAPPINGS.update(C_AUDIO_ADVANCEDAUDIOPREVIEWANDSAVE)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_AUDIO_ADVANCEDAUDIOPREVIEWANDSAVE)
except ImportError as e:
    print(f'Could not import nodes from audio.AdvancedAudioPreviewAndSave: {e}')

try:
    from .audio.mastering_chain_node import NODE_CLASS_MAPPINGS as C_AUDIO_MASTERING_CHAIN_NODE, NODE_DISPLAY_NAME_MAPPINGS as D_AUDIO_MASTERING_CHAIN_NODE
    NODE_CLASS_MAPPINGS.update(C_AUDIO_MASTERING_CHAIN_NODE)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_AUDIO_MASTERING_CHAIN_NODE)
except ImportError as e:
    print(f'Could not import nodes from audio.mastering_chain_node: {e}')

try:
    from .conditioning.ACE_T5_Conditioning_Node import NODE_CLASS_MAPPINGS as C_CONDITIONING_ACE_T5_CONDITIONING_NODE, NODE_DISPLAY_NAME_MAPPINGS as D_CONDITIONING_ACE_T5_CONDITIONING_NODE
    NODE_CLASS_MAPPINGS.update(C_CONDITIONING_ACE_T5_CONDITIONING_NODE)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_CONDITIONING_ACE_T5_CONDITIONING_NODE)
except ImportError as e:
    print(f'Could not import nodes from conditioning.ACE_T5_Conditioning_Node: {e}')

try:
    from .Hybrid_Sigma_Scheduler import NODE_CLASS_MAPPINGS as C_HYBRID_SIGMA_SCHEDULER, NODE_DISPLAY_NAME_MAPPINGS as D_HYBRID_SIGMA_SCHEDULER
    NODE_CLASS_MAPPINGS.update(C_HYBRID_SIGMA_SCHEDULER)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_HYBRID_SIGMA_SCHEDULER)
except ImportError as e:
    print(f'Could not import nodes from Hybrid_Sigma_Scheduler: {e}')

try:
    from .latent.ACE_LATENT_VISUALIZER import NODE_CLASS_MAPPINGS as C_LATENT_ACE_LATENT_VISUALIZER, NODE_DISPLAY_NAME_MAPPINGS as D_LATENT_ACE_LATENT_VISUALIZER
    NODE_CLASS_MAPPINGS.update(C_LATENT_ACE_LATENT_VISUALIZER)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_LATENT_ACE_LATENT_VISUALIZER)
except ImportError as e:
    print(f'Could not import nodes from latent.ACE_LATENT_VISUALIZER: {e}')

try:
    from .NoiseDecayScheduler_Custom import NODE_CLASS_MAPPINGS as C_NOISEDECAYSCHEDULER_CUSTOM, NODE_DISPLAY_NAME_MAPPINGS as D_NOISEDECAYSCHEDULER_CUSTOM
    NODE_CLASS_MAPPINGS.update(C_NOISEDECAYSCHEDULER_CUSTOM)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_NOISEDECAYSCHEDULER_CUSTOM)
except ImportError as e:
    print(f'Could not import nodes from NoiseDecayScheduler_Custom: {e}')

try:
    from .PingPongSampler_Custom import NODE_CLASS_MAPPINGS as C_PINGPONGSAMPLER_CUSTOM, NODE_DISPLAY_NAME_MAPPINGS as D_PINGPONGSAMPLER_CUSTOM
    NODE_CLASS_MAPPINGS.update(C_PINGPONGSAMPLER_CUSTOM)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_PINGPONGSAMPLER_CUSTOM)
except ImportError as e:
    print(f'Could not import nodes from PingPongSampler_Custom: {e}')

try:
    from .PingPongSampler_Custom_FBG import NODE_CLASS_MAPPINGS as C_PINGPONGSAMPLER_CUSTOM_FBG, NODE_DISPLAY_NAME_MAPPINGS as D_PINGPONGSAMPLER_CUSTOM_FBG
    NODE_CLASS_MAPPINGS.update(C_PINGPONGSAMPLER_CUSTOM_FBG)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_PINGPONGSAMPLER_CUSTOM_FBG)
except ImportError as e:
    print(f'Could not import nodes from PingPongSampler_Custom_FBG: {e}')

try:
    from .SCENE_GENIUS_AUTOCREATOR import NODE_CLASS_MAPPINGS as C_SCENE_GENIUS_AUTOCREATOR, NODE_DISPLAY_NAME_MAPPINGS as D_SCENE_GENIUS_AUTOCREATOR
    NODE_CLASS_MAPPINGS.update(C_SCENE_GENIUS_AUTOCREATOR)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_SCENE_GENIUS_AUTOCREATOR)
except ImportError as e:
    print(f'Could not import nodes from SCENE_GENIUS_AUTOCREATOR: {e}')

try:
    from .seed_saver_node import NODE_CLASS_MAPPINGS as C_SEED_SAVER_NODE, NODE_DISPLAY_NAME_MAPPINGS as D_SEED_SAVER_NODE
    NODE_CLASS_MAPPINGS.update(C_SEED_SAVER_NODE)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_SEED_SAVER_NODE)
except ImportError as e:
    print(f'Could not import nodes from seed_saver_node: {e}')

try:
    from .text.TextInputNode import NODE_CLASS_MAPPINGS as C_TEXT_TEXTINPUTNODE, NODE_DISPLAY_NAME_MAPPINGS as D_TEXT_TEXTINPUTNODE
    NODE_CLASS_MAPPINGS.update(C_TEXT_TEXTINPUTNODE)
    NODE_DISPLAY_NAME_MAPPINGS.update(D_TEXT_TEXTINPUTNODE)
except ImportError as e:
    print(f'Could not import nodes from text.TextInputNode: {e}')

__all__ = ['NODE_CLASS_MAPPINGS', 'NODE_DISPLAY_NAME_MAPPINGS']